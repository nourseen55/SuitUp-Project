@model Product

@{
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

@section Edit {
    <style>
        .material-symbols-outlined {
            font-variation-settings: 'FILL' 0, 'wght' 650, 'GRAD' 30, 'opsz' 24;
            cursor: pointer;
        }

        .product-card {
            border: 3px solid white;
            border-radius: 10px;
            overflow: hidden;
            background-color: #f2f2f2;
        }

        .product-details {
            padding: 20px;
        }

        .centered-button {
            text-align: right;
        }

            .centered-button button {
                padding: 10px 20px;
                border: none;
                background-color: palevioletred; /* Set button background color */
                color: #fff;
                cursor: pointer;
                transition: background-color 0.3s, color 0.3s;
            }

                .centered-button button:hover {
                    background-color: lightgray; /* Change button background color on hover */
                    color: #fff;
                }

        .added {
            background-color: lightgray !important; /* Change button background color when added */
            /* color: !important; */
        }

        .product-name {
            font-weight: bold; /* Make product name bold */
            font-size: 24px; /* Increase font size of product name */
        }

        .product-details p {
            margin-bottom: 5px; /* Add margin bottom to separate product details */
        }

        .product-details b {
            font-weight: bold; /* Make product details bold */
        }

        .square-border {
            border: 2px solid white; /* Add border to the square */
            border-radius: 10px; /* Add border radius for rounded corners */
            padding: 20px; /* Add padding to the square */
            margin-top: 10px; /* Add margin top to separate from product details */
        }

        .color-circle {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-right: 5px;
            display: inline-block;
        }

        .white-circle {
            border: 1px solid black;
            background-color: white;
        }

        .black-circle {
            border: 1px solid black;
            background-color: black;
        }

        .silver-circle {
            border: 1px solid black;
            background-color: silver;
        }

        .Gold-circle {
            border: 1px solid black;
            background-color: goldenrod;
        }
    </style>
    <script>
            function addToCart(productId) {
                var button = document.getElementById("cartButton");
                if (!button.classList.contains("added")) {
                    button.innerHTML = "Adding To Cart...";
                    button.disabled = true;

                    // Send AJAX request to add product to cart
                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "/Cart/AddToCart?productId=" + productId, true); // Adjust the URL to match your controller and action names
                    xhr.setRequestHeader("Content-Type", "application/json");
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            button.innerHTML = "Added To Cart ✓";
                            button.classList.add("added");
                            button.disabled = false;

                            if (xhr.status === 200) {
                                // Product added successfully, show success message with button
                                showSuccessMessage();
                            } else {
                                // Error adding product to cart, show error message
                                showErrorMessage();
                            }
                        }
                    };
                    xhr.send();
                }
            }

            function showSuccessMessage() {
                var alertDiv = document.createElement("div");
                alertDiv.classList.add("alert", "alert-success");
                alertDiv.setAttribute("role", "alert");
                alertDiv.textContent = "Product added to cart successfully! ";

                // Create the "Go to Cart" button
                var cartButton = document.createElement("button");
                cartButton.textContent = "Go to Cart";
                cartButton.classList.add("btn", "btn-secondary", "btn-sm", "ml-3");
                cartButton.onclick = function () {
                    // Redirect to the cart page
                    window.location.href = "/Cart"; // Adjust the URL to match your cart page
                };

                // Append the button to the alert message
                alertDiv.appendChild(cartButton);

                var containerDiv = document.getElementById("alertContainer");
                containerDiv.appendChild(alertDiv);

                setTimeout(function () {
                    alertDiv.remove();
                }, 4000);
            }

            function showErrorMessage() {
                var alertDiv = document.createElement("div");
                alertDiv.classList.add("alert", "alert-danger");
                alertDiv.setAttribute("role", "alert");
                alertDiv.textContent = "Error adding product to cart";

                var containerDiv = document.getElementById("alertContainer");
                containerDiv.appendChild(alertDiv);

                setTimeout(function () {
                    alertDiv.remove();
                }, 4000);
            }
        </script>
   



    <div class="container">

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card mt-5 product-card">
                    <div class="card-body">
                        <div id="alertContainer"></div>
                        <div class="row">
                            <div class="col-md-4">
                                <p class="form-control-static product-name">@Model.Name</p>
                                <img src="~/img/gallery/@Model.urlimg" class="img-fluid" alt="Product Image">
                            </div>
                            <div class="col-md-8 product-details">
                                <div class="square-border">

                                    <p class="product-name">Description</p>
                                    <p class="form-control-static"><b>Price:</b> $@Model.Price</p>
                                    <style>
                                        .color-selection {
                                            margin-bottom: 10px;
                                        }

                                            .color-selection label {
                                                margin-right: 10px;
                                            }

                                        #productImage {
                                            width: 200px;
                                            height: auto;
                                            margin-top: 10px;
                                        }
                                    </style>

                                    @if (@Model.Category_id == 1 || @Model.Category_id == 4)
                                    {
                                        <p><b>Select Size:</b></p>
                                        <select id="sizeSelect" class="form-control">
                                            <option value="S">S</option>
                                            <option value="M">M</option>
                                            <option value="L">L</option>
                                            <option value="XL">XL</option>
                                            <option value="XXL">XXL</option>
                                        </select>
                                    }

                                    @if (@Model.Category_id == 6)
                                    {
                                        <p><b>Select Size:</b></p>
                                        <select id="sizeSelect" class="form-control">
                                            <option value="36">36</option>
                                            <option value="37">37</option>
                                            <option value="38">38</option>
                                            <option value="39">39</option>
                                            <option value="40">40</option>
                                            <option value="41">41</option>
                                            <option value="42">42</option>
                                            <option value="43">43</option>

                                        </select>
                                    }
                                    <br />
                                    @if (@Model.Category_id == 3 || @Model.Category_id == 2 || @Model.Category_id == 5)
                                    {
                                        <div class="bag-size">
                                            <button class="one-size-btn" onclick="toggleSizeDetails()" style="background-color:gray">One Size</button>
                                            <div class="size-details" id="sizeDetails">
                                                <p>Length:7 cm</p>
                                                <p>Width: 28 cm</p>
                                            </div>
                                        </div>

                                        <style>
                                            .size-details {
                                                background-color: #f2f2f2;
                                                padding: 10px;
                                                border-radius: 5px;
                                                display: none;
                                            }

                                                .size-details p {
                                                    display: inline-block;
                                                    margin-right: 20px;
                                                }

                                        </style>
                                    }
                                    <script>
                                        function toggleSizeDetails() {
                                            var sizeDetails = document.getElementById("sizeDetails");
                                            sizeDetails.style.display = (sizeDetails.style.display === "block") ? "none" : "block";
                                        }

                                    </script>

                                </div>
                                <!-- Add more product details here -->
                            </div>
                        </div>
                    </div>
                    <div class="row card-footer text-right centered-button">

                        <div class="col-12 col-md-4 ">
                            <div class="product-icons" data-product-id="@Model.Id" style="margin-top: 15px">
                                <span onclick="toggleFavorite(this)" class="material-symbols-outlined">
                                    favorite
                                </span>

                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <button id="cartButton" class="btn btn-primary" onclick="addToCart((@Model.Id))">Add To Cart <span class="cart-icon">&#128722;</span></button>
                        </div>
                        <!-- Right-aligned button -->
                    </div>


                </div>
            </div>
        </div>
    </div>
                    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Check authentication status
            let isAuthenticated = @(User.Identity.IsAuthenticated.ToString().ToLower());

            if (isAuthenticated) {
                let productItem = document.querySelector('.product-icons');
                if (productItem) {
                    let productId = productItem.dataset.productId;
                    let isFavorite = localStorage.getItem('favorite_' + productId) === 'true'; // Retrieve favorite status from localStorage
                    let iconElement = productItem.querySelector('.material-symbols-outlined');

                    if (isFavorite) {
                        iconElement.innerHTML = `
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16">
                                                    <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314" />
                                                </svg>
                                            `;
                    }
                }
            }

        });

        function toggleFavorite(element) {
            // Check authentication status
            let isAuthenticated = @(User.Identity.IsAuthenticated.ToString().ToLower());

            if (!isAuthenticated) {
                // If not authenticated, show alert and return
                alert("You must log in");
                return;
            }

            let productItem = element.closest('.product-icons'); // Add dot before product-icons
            let productId = productItem.dataset.productId;
            let iconElement = productItem.querySelector('.material-symbols-outlined');
            let isFavorite = productItem.dataset.isFavorite === 'true';

            isFavorite = !isFavorite;

            localStorage.setItem('favorite_' + productId, isFavorite.toString());
            if (isFavorite) {
                iconElement.innerHTML = `
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314" />
                                        </svg>
                                    `;
            } else {
                iconElement.innerHTML = 'favorite';
            }

            fetch('/Product/ToggleFavorite', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId: parseInt(productId),
                    isFavorite: isFavorite
                })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });

            productItem.dataset.isFavorite = isFavorite.toString();
        }
    </script>

}


}
